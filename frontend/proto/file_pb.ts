// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=.ts"
// @generated from file file.proto (package proto, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message proto.File
 */
export class File extends Message<File> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string path = 2;
   */
  path = "";

  /**
   * @generated from field: uint32 size = 3;
   */
  size = 0;

  /**
   * @generated from field: string thumbnail = 4;
   */
  thumbnail = "";

  /**
   * @generated from field: string id = 5;
   */
  id = "";

  /**
   * @generated from field: string ext = 6;
   */
  ext = "";

  constructor(data?: PartialMessage<File>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "proto.File";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "thumbnail", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "ext", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): File {
    return new File().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): File {
    return new File().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): File {
    return new File().fromJsonString(jsonString, options);
  }

  static equals(a: File | PlainMessage<File> | undefined, b: File | PlainMessage<File> | undefined): boolean {
    return proto3.util.equals(File, a, b);
  }
}

/**
 * @generated from message proto.FileUploadResponse
 */
export class FileUploadResponse extends Message<FileUploadResponse> {
  /**
   * @generated from field: proto.File file = 1;
   */
  file?: File;

  constructor(data?: PartialMessage<FileUploadResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "proto.FileUploadResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "file", kind: "message", T: File },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileUploadResponse {
    return new FileUploadResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileUploadResponse {
    return new FileUploadResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileUploadResponse {
    return new FileUploadResponse().fromJsonString(jsonString, options);
  }

  static equals(a: FileUploadResponse | PlainMessage<FileUploadResponse> | undefined, b: FileUploadResponse | PlainMessage<FileUploadResponse> | undefined): boolean {
    return proto3.util.equals(FileUploadResponse, a, b);
  }
}

/**
 * @generated from message proto.GetFilesResponse
 */
export class GetFilesResponse extends Message<GetFilesResponse> {
  /**
   * @generated from field: repeated proto.File files = 1;
   */
  files: File[] = [];

  constructor(data?: PartialMessage<GetFilesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "proto.GetFilesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "files", kind: "message", T: File, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFilesResponse {
    return new GetFilesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFilesResponse {
    return new GetFilesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFilesResponse {
    return new GetFilesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetFilesResponse | PlainMessage<GetFilesResponse> | undefined, b: GetFilesResponse | PlainMessage<GetFilesResponse> | undefined): boolean {
    return proto3.util.equals(GetFilesResponse, a, b);
  }
}

/**
 * @generated from message proto.UpdateFileNameRequest
 */
export class UpdateFileNameRequest extends Message<UpdateFileNameRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<UpdateFileNameRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "proto.UpdateFileNameRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateFileNameRequest {
    return new UpdateFileNameRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateFileNameRequest {
    return new UpdateFileNameRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateFileNameRequest {
    return new UpdateFileNameRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateFileNameRequest | PlainMessage<UpdateFileNameRequest> | undefined, b: UpdateFileNameRequest | PlainMessage<UpdateFileNameRequest> | undefined): boolean {
    return proto3.util.equals(UpdateFileNameRequest, a, b);
  }
}

/**
 * @generated from message proto.UpdateFileNameResponse
 */
export class UpdateFileNameResponse extends Message<UpdateFileNameResponse> {
  /**
   * @generated from field: proto.File file = 1;
   */
  file?: File;

  constructor(data?: PartialMessage<UpdateFileNameResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "proto.UpdateFileNameResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "file", kind: "message", T: File },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateFileNameResponse {
    return new UpdateFileNameResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateFileNameResponse {
    return new UpdateFileNameResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateFileNameResponse {
    return new UpdateFileNameResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateFileNameResponse | PlainMessage<UpdateFileNameResponse> | undefined, b: UpdateFileNameResponse | PlainMessage<UpdateFileNameResponse> | undefined): boolean {
    return proto3.util.equals(UpdateFileNameResponse, a, b);
  }
}

/**
 * @generated from message proto.DeleteFileRequest
 */
export class DeleteFileRequest extends Message<DeleteFileRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteFileRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "proto.DeleteFileRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteFileRequest {
    return new DeleteFileRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteFileRequest {
    return new DeleteFileRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteFileRequest {
    return new DeleteFileRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteFileRequest | PlainMessage<DeleteFileRequest> | undefined, b: DeleteFileRequest | PlainMessage<DeleteFileRequest> | undefined): boolean {
    return proto3.util.equals(DeleteFileRequest, a, b);
  }
}

